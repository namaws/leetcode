{"leetcode":{"easy":6,"hard":0,"medium":17,"shas":{"0198-house-robber":{"0198-house-robber.java":"600def2c3b173ea903f69f4c94e4f65edd805795","README.md":"c491b967a900cb99d15082fbea11f278283749f7","difficulty":"medium"},"README.md":{"":"a7dcf43a4014d6603fb26391a23f8183ce1c5d81"},"0100-same-tree":{"0100-same-tree.java":"cd253007afa886c1ab02c4a2ca640ec83f92a1ca","README.md":"e68046f2dc906bcd38453dd92eec5c257d4694a9","difficulty":"easy"},"stats.json":{"":"7395200ce17f5a3464d117b0416a1112d31f44bf"},"0078-subsets":{"0078-subsets.java":"4266d4c3b88c8eca6a293ca68a2b38c5d6136b2b","README.md":"fb4b5a7f5abfc5e90375a3cbd0ec5781838463eb","difficulty":"medium"},"0210-course-schedule-ii":{"0210-course-schedule-ii.java":"ed2fe3ff52742f85cd55b63e81206c491175bc28","README.md":"ad2b098b9dff0b340a6113e3a9f5d9ffac5a52f3","difficulty":"medium"},"0146-lru-cache":{"0146-lru-cache.java":"df4963379de813f4a4bd4d89e2d58ae054b53400","README.md":"78d8cda26202d31a421edf66e6ee48900155ec1f","difficulty":"medium"},"0006-zigzag-conversion":{"0006-zigzag-conversion.java":"5b39e133cf1f42fc5b60931b89c6d9639e2987ab","README.md":"c32dbe88a507928267d767767fb42e1d422c0a6a","difficulty":"medium"},"0511-all-paths-from-source-lead-to-destination":{"0511-all-paths-from-source-lead-to-destination.java":"d01de10ad4a7f2933eceeae4ba3f212e93f12662","README.md":"71ca7e7bfad5627f6786df8af344a3667d11c0ac","difficulty":"medium"},"0120-triangle":{"0120-triangle.java":"576d17fbb17f90a32fc67f2a79285a007cde71c3","README.md":"041b5f2775b1bcdb24d9b7c06cdd771e5d1cf484","difficulty":"medium"},"0064-minimum-path-sum":{"0064-minimum-path-sum.java":"ba808947f3022ace60a700ff39d409876ecee33f","README.md":"83eb5e532a72ad80d5c0489525c128a44770f39f","difficulty":"medium"},"0141-linked-list-cycle":{"0141-linked-list-cycle.java":"568137f3bdf86a33615849623cbbbb442cb5d3e7","README.md":"c5ab8258e428a83827bb65b22ace9f4fd6aa339a","difficulty":"easy"},"0002-add-two-numbers":{"0002-add-two-numbers.java":"c61439c6dc8068152ed15b62afe7489230124f1e","README.md":"466f5e31bfeb151e70b5b325c379cf04183ebb57","difficulty":"medium"},"0021-merge-two-sorted-lists":{"README.md":"859aec2842f4b0ee5bcbc96fb86ed1988c287b12"},"0138-copy-list-with-random-pointer":{"0138-copy-list-with-random-pointer.java":"86f9c4f52884391ffa25307ae7e8c28c561b78cd","README.md":"e428e5a3788bd2f607e32ab5a9eb946bbc45f8ce","difficulty":"medium"},"0206-reverse-linked-list":{"0206-reverse-linked-list.java":"bf6a552d394df63f8387fb46e8c0481a2f966eec","README.md":"d0e5a229257a811c50c7bcd689b492fe0a4082d2","difficulty":"easy"},"0092-reverse-linked-list-ii":{"0092-reverse-linked-list-ii.java":"84a9636f49fbfe2817ed867d4fc87bb0d3bc9652","README.md":"ef7393e9cec8b5d4098980721b062d60e653322a","difficulty":"medium"},"0019-remove-nth-node-from-end-of-list":{"0019-remove-nth-node-from-end-of-list.java":"a2ad88d5261472d56507bf3494cc60b339877468","README.md":"f283761dd7231ad5a2b56e60cd0dc7e768c10d43","difficulty":"medium"},"0082-remove-duplicates-from-sorted-list-ii":{"0082-remove-duplicates-from-sorted-list-ii.java":"03a66c73f0e1b140aeafdb43c1965a6863226a10","README.md":"6a04b7ae4aaeb832fed9b01f7af10fbfa37e4b4e","difficulty":"medium"},"0061-rotate-list":{"0061-rotate-list.java":"fef4b4fb3152f33f2f3080cb5053cf40f4144235","README.md":"65b7b860012ab804609a9507478a5816b73c3748","difficulty":"medium"},"0104-maximum-depth-of-binary-tree":{"0104-maximum-depth-of-binary-tree.java":"1f02b2a815344d7b5a880a164c913efc4428af39","README.md":"d8fa7937b3b62ca791e5dff16c0abcab30ea5245","difficulty":"easy"},"0226-invert-binary-tree":{"0226-invert-binary-tree.java":"39591e1024cb9da668d7bad982104e3d27dc11c2","README.md":"50f4a6354112c1afacef29ffc7209e5f9f7095d8","difficulty":"easy"},"0101-symmetric-tree":{"0101-symmetric-tree.java":"71444cfda33728a950f7f332544ac72fcdf47362","README.md":"1f2113012a39cfbad1ebdddb1b47cba18e5fa452","difficulty":"easy"},"0114-flatten-binary-tree-to-linked-list":{"0114-flatten-binary-tree-to-linked-list.java":"ebb96da78a953bb8efe57dcf0b3c5aba53011532","README.md":"581431bf3d62fd3a541ca6eb01543cb6f06b71a8","difficulty":"medium"},"0105-construct-binary-tree-from-preorder-and-inorder-traversal":{"0105-construct-binary-tree-from-preorder-and-inorder-traversal.java":"f0b960c1a0256bcc2b62b72cf75502386f05a98f","README.md":"75ac83be2e52aa76ea9bd5c9c20537a499cb9ec0","difficulty":"medium"},"0117-populating-next-right-pointers-in-each-node-ii":{"0117-populating-next-right-pointers-in-each-node-ii.java":"8e5c7a58bb5cf453c5f6b6a502bcbabd51f0ec99","README.md":"884e1ff07d0edfb9c52d02ccac4bc0edcc5b0610","difficulty":"medium"}},"solved":23}}